<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="8b3e0b9f-c757-4e5e-b765-40a15c69645d" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../battleforcastile-match-recorder" />
  </component>
  <component name="ProjectId" id="1PA5JFYYnMh9LwnnVONjeQHEPsl" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/helm/templates_examples" />
      <recent name="$PROJECT_DIR$/helm" />
      <recent name="$PROJECT_DIR$/helm/templates/prod" />
      <recent name="$PROJECT_DIR$/helm/templates" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/microverse_brain/endpoints" />
      <recent name="$PROJECT_DIR$/helm/templates/prod" />
      <recent name="$PROJECT_DIR$/helm/templates" />
      <recent name="$PROJECT_DIR$/microverse_brain" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python tests.pytest for tests.matches.test_match_path.test_patch_match_returns_200_when_it_has_been_successfully_patched">
    <configuration default="true" type="DjangoTestsConfigurationType">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PyLettuceRunConfigurationType" factoryName="Lettuce">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="microverse-brain" type="Python.FlaskServer">
      <module name="battleforcastile-match-recorder" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.matches.test_match_path" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder/tests/matches" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.matches.test_match_path&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.matches.test_match_path.test_patch_match_returns_200_when_it_has_been_successfully_patched" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder/tests/matches" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.matches.test_match_path.test_patch_match_returns_200_when_it_has_been_successfully_patched&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.turns.test_turn_get.test_turn_returns_content_when_there_are_turns_with_that_number_and_hero" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder/tests/turns" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.turns.test_turn_get.test_turn_returns_content_when_there_are_turns_with_that_number_and_hero&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.turns.test_turns_post.test_turns_are_successfully_created" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder/tests/turns" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.turns.test_turns_post.test_turns_are_successfully_created&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for tests.turns.test_turns_post.test_turns_returns_204_if_turn_already_exists" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="battleforcastile-match-recorder" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../battleforcastile-match-recorder/tests/turns" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;tests.turns.test_turns_post.test_turns_returns_204_if_turn_already_exists&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for tests.matches.test_match_path.test_patch_match_returns_200_when_it_has_been_successfully_patched" />
        <item itemvalue="Python tests.pytest for tests.turns.test_turns_post.test_turns_returns_204_if_turn_already_exists" />
        <item itemvalue="Python tests.pytest for tests.turns.test_turns_post.test_turns_are_successfully_created" />
        <item itemvalue="Python tests.pytest for tests.turns.test_turn_get.test_turn_returns_content_when_there_are_turns_with_that_number_and_hero" />
        <item itemvalue="Python tests.pytest for tests.matches.test_match_path" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8b3e0b9f-c757-4e5e-b765-40a15c69645d" name="Default Changelist" comment="" />
      <created>1565303986789</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1565303986789</updated>
      <workItem from="1565303987938" duration="116000" />
      <workItem from="1565304118281" duration="553000" />
      <workItem from="1565456652953" duration="77000" />
      <workItem from="1565456754424" duration="22000" />
      <workItem from="1565456903328" duration="34000" />
      <workItem from="1565456945012" duration="2000" />
      <workItem from="1565456955903" duration="63000" />
      <workItem from="1565457026772" duration="3158000" />
      <workItem from="1565464119754" duration="36576000" />
      <workItem from="1565708029621" duration="11324000" />
      <workItem from="1565900353160" duration="45498000" />
      <workItem from="1566162282560" duration="7396000" />
    </task>
    <task id="LOCAL-00001" summary="Refactor the &quot;turns&quot; endpoint so it's always assigned to a match (e.g., /api/v1/matches/&lt;match_id&gt;/turns/)">
      <created>1565895000102</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1565895000102</updated>
    </task>
    <task id="LOCAL-00002" summary="Add endpoint to get a single turn based on its 'turn_number' (e.g., /api/v1/matches/&lt;match_id&gt;/turns/&lt;turn_number&gt;/)">
      <created>1565895570323</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1565895570323</updated>
    </task>
    <task id="LOCAL-00003" summary="Add &quot;hero&quot; to the &quot;TurnDetail&quot; endpoint">
      <created>1565978124629</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1565978124629</updated>
    </task>
    <task id="LOCAL-00004" summary="Refactor the code so it integrates with the CLI tool">
      <created>1566038559447</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1566038559447</updated>
    </task>
    <task id="LOCAL-00005" summary="BUGFIX: Turns (GET endpoint) wasn't returning the right data">
      <created>1566043004390</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1566043004390</updated>
    </task>
    <task id="LOCAL-00006" summary="BUGFIX: Avoid creating tables on the first request (Alembic already does it)">
      <created>1566070423187</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1566070423187</updated>
    </task>
    <task id="LOCAL-00007" summary="Add Prometheus python client. Create initial custom metric to track the number of total matches created">
      <created>1566115826558</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1566115826558</updated>
    </task>
    <task id="LOCAL-00008" summary="Upgrade Helm chart to 0.1.4">
      <created>1566116139999</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1566116139999</updated>
    </task>
    <task id="LOCAL-00009" summary="Add Prometheus metrics. Adapt the backend to the new CLI version">
      <created>1566325821858</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1566325821858</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Refactor the &quot;turns&quot; endpoint so it's always assigned to a match (e.g., /api/v1/matches/&lt;match_id&gt;/turns/)" />
    <MESSAGE value="Add endpoint to get a single turn based on its 'turn_number' (e.g., /api/v1/matches/&lt;match_id&gt;/turns/&lt;turn_number&gt;/)" />
    <MESSAGE value="Add &quot;hero&quot; to the &quot;TurnDetail&quot; endpoint" />
    <MESSAGE value="Refactor the code so it integrates with the CLI tool" />
    <MESSAGE value="BUGFIX: Turns (GET endpoint) wasn't returning the right data" />
    <MESSAGE value="BUGFIX: Avoid creating tables on the first request (Alembic already does it)" />
    <MESSAGE value="Add Prometheus python client. Create initial custom metric to track the number of total matches created" />
    <MESSAGE value="Upgrade Helm chart to 0.1.4" />
    <MESSAGE value="Add Prometheus metrics. Adapt the backend to the new CLI version" />
    <option name="LAST_COMMIT_MESSAGE" value="Add Prometheus metrics. Adapt the backend to the new CLI version" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/../battleforcastile-match-recorder/tests/users/test_users_post.py</url>
          <line>18</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/../battleforcastile-match-recorder/tests/turns/test_turns_post.py</url>
          <line>81</line>
          <option name="timeStamp" value="27" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="tests">
        <watch expression="rv.data" language="Python" />
        <watch expression="json.dumps([[], []])" language="Python" />
        <watch expression="serialize_turn(created_turn)" language="Python" />
        <watch expression="json.loads(rv.data)" language="Python" />
        <watch expression="json.loads(rv.data)" language="Python" />
        <watch expression="serialize_turn(created_turn)" language="Python" />
        <watch expression="json.loads(rv.data)" language="Python" />
        <watch expression="serialize_turn(created_turn)" language="Python" />
        <watch expression="json.loads('[[], []]')" language="Python" />
        <watch expression="data['num_cards_in_hand_left']" language="Python" />
        <watch expression="turn" language="Python" />
        <watch expression="serialize_turn(created_turn)" language="Python" />
        <watch expression="rv.content" language="Python" />
        <watch expression="rv" language="Python" />
        <watch expression="Turn.query.all()" language="Python" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/microverse_brain$microverse_brain.coverage" NAME="microverse-brain Coverage Results" MODIFIED="1565304648793" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_users_get_py.coverage" NAME="pytest in test_users_get.py Coverage Results" MODIFIED="1565889641961" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/users" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_for_test_turns_post_test_turns_are_successfully_created.coverage" NAME="pytest for test_turns_post.test_turns_are_successfully_created Coverage Results" MODIFIED="1566334248879" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/turns" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_users_post_py.coverage" NAME="pytest in test_users_post.py Coverage Results" MODIFIED="1565889687520" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/users" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_matches_post_py.coverage" NAME="pytest in test_matches_post.py Coverage Results" MODIFIED="1565889260856" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/matches" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_turns_get_py.coverage" NAME="pytest in test_turns_get.py Coverage Results" MODIFIED="1565894325744" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/turns" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_root_get_py.coverage" NAME="pytest in test_root_get.py Coverage Results" MODIFIED="1565890093583" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_for_test_turns_post_test_turns_returns_204_if_turn_already_exists.coverage" NAME="pytest for test_turns_post.test_turns_returns_204_if_turn_already_exists Coverage Results" MODIFIED="1566413623087" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/turns" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_for_test_match_path_test_patch_match_returns_200_when_it_has_been_successfully_patched.coverage" NAME="pytest for test_match_path.test_patch_match_returns_200_when_it_has_been_successfully_patched Coverage Results" MODIFIED="1566414797735" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/matches" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_turns_post_py.coverage" NAME="pytest in test_turns_post.py Coverage Results" MODIFIED="1565982826431" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/turns" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_matches_get_py.coverage" NAME="pytest in test_matches_get.py Coverage Results" MODIFIED="1565888722245" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/matches" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_for_test_match_path_test_match_returns_200_when_it_has_been_successfully_patched.coverage" NAME="pytest for test_match_path.test_match_returns_200_when_it_has_been_successfully_patched Coverage Results" MODIFIED="1566021471873" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/matches" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_in_test_search_match_post_py.coverage" NAME="pytest in test_search_match_post.py Coverage Results" MODIFIED="1565889496039" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/matches" />
    <SUITE FILE_PATH="coverage/microverse_brain$pytest_for_test_turn_get_test_turn_returns_content_when_there_are_turns_with_that_number_and_hero.coverage" NAME="pytest for test_turn_get.test_turn_returns_content_when_there_are_turns_with_that_number_and_hero Coverage Results" MODIFIED="1566021988823" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/turns" />
  </component>
</project>